name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libssl-dev
    
    - name: Create Makefile
      run: |
        cat > Makefile << 'MAKEFILEEOF'
CC = gcc
CFLAGS = -Wall -Wextra -pthread
LDFLAGS = -pthread -lcrypto

SRCS = main.c node.c stun.c upnp.c discovery.c discovery_server.c enhanced_discovery.c nat_traversal.c firewall.c reliability.c security.c diagnostics.c dht.c rendezvous.c turn.c ice.c
OBJS = $(SRCS:.c=.o)
HDRS = node.h stun.h upnp.h discovery.h discovery_server.h enhanced_discovery.h firewall.h reliability.h security.h diagnostics.h dht.h rendezvous.h turn.h ice.h

all: node_network

node_network: $(OBJS)
$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

%.o: %.c $(HDRS)
$(CC) $(CFLAGS) -c $<

clean:
rm -f node_network *.o

.PHONY: all clean
MAKEFILEEOF
    
    - name: Build
      run: make
    
    - name: Test basic functionality
      run: |
        # 基本的な機能テスト
        ./node_network -n 1 -T -U -D -E -F &
        PID=$!
        sleep 5
        kill $PID || true
    
    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: node_network-linux
        path: node_network

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Check environment
      run: |
        uname -a
        sw_vers
        gcc --version
    
    - name: Install dependencies
      run: |
        brew install openssl@3
    
    - name: Create Makefile
      run: |
        cat > Makefile << 'MAKEFILEEOF'
CC = gcc
CFLAGS = -Wall -Wextra -I/usr/local/opt/openssl@3/include
LDFLAGS = -L/usr/local/opt/openssl@3/lib -lcrypto

SRCS = main.c node.c stun.c upnp.c discovery.c discovery_server.c enhanced_discovery.c nat_traversal.c firewall.c reliability.c security.c diagnostics.c dht.c rendezvous.c turn.c ice.c
OBJS = $(SRCS:.c=.o)
HDRS = node.h stun.h upnp.h discovery.h discovery_server.h enhanced_discovery.h firewall.h reliability.h security.h diagnostics.h dht.h rendezvous.h turn.h ice.h

all: node_network

node_network: $(OBJS)
$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

%.o: %.c $(HDRS)
$(CC) $(CFLAGS) -c $<

clean:
rm -f node_network *.o

.PHONY: all clean
MAKEFILEEOF
    
    - name: Build
      run: |
        export LDFLAGS="-L/usr/local/opt/openssl@3/lib"
        export CPPFLAGS="-I/usr/local/opt/openssl@3/include"
        make
    
    - name: Test basic functionality
      run: |
        # 基本的な機能テスト
        ./node_network -n 1 -T -U -D -E -F &
        PID=$!
        sleep 5
        kill $PID || true
    
    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: node_network-macos
        path: node_network
